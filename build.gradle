repositories {
  mavenCentral()
}

buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      name "Palantir Bintray"
      url "http://dl.bintray.com/palantir/releases"
    }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:1.2.2"
    classpath "com.palantir:gradle-flexversion:0.7.0"
  }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "gradle-flexversion"

flexversion {
  useTags = true
}

version flexVersion()

dependencies {
  compile fileTree(dir:"lib", include:"*.jar")
  compile "commons-cli:commons-cli:1.3.1"
  compile "com.google.guava:guava:18.0"
  compile("org.apache.xmlrpc:xmlrpc-client:3.1.2") {
    exclude group: "junit", module: "junit"
  }
}

mainClassName = "kostasniktas.one.cli.OneCli"

jar {
  manifest {
    attributes(
      "Main-Class" : "${project.mainClassName}"
    )
  }
}

println shadowJar.archivePath

task executableJar << {
  file("${buildDir}/libs").mkdirs()
  def execu = file("${buildDir}/libs/${project.name}.run").newDataOutputStream()
  def jarBin = file(shadowJar.archivePath).newDataInputStream()
  execu << '''#!/bin/sh
MYSELF=$(which "$0" 2> /dev/null)
[ $? -gt 0 -a -f "$0" ] && MYSELF="./$0"
JAVA_CMD=java
if test -n "$JAVA_HOME"; then
  JAVA_CMD="$JAVA_HOME/bin/java"
fi
exec "$JAVA_CMD" -jar $MYSELF "$@"
'''
  execu << jarBin
  jarBin.close()
  execu.close()
  ant.chmod(file:"${buildDir}/libs/${project.name}.run", perm:"+x")
}
executableJar.dependsOn shadowJar
